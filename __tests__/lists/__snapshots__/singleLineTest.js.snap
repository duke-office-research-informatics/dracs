// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Single Line List Item matches snapshot w/o a11y violations 1`] = `
.c0 {
  padding: 0;
  margin: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  width: 100%;
}

.c1:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      onKeyUp={[Function]}
      tabIndex={null}
    >
      <li
        className="c1"
        onKeyUp={[Function]}
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c2"
          />
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          />
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;

exports[`Single Line List Item passes a child to the correct dom node in the list item 1`] = `
.c3 {
  fill: #ffd960;
  vertical-align: top;
}

.c0 {
  padding: 0;
  margin: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  width: 100%;
}

.c1:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      onKeyUp={[Function]}
      tabIndex={null}
    >
      <li
        className="c1"
        onKeyUp={[Function]}
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c2"
          />
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          >
            <icon_wrapper__Icon
              aria-label="warning"
              color="#ffd960"
              height={24}
              role="img"
              viewBox="0 0 24 24"
              width={24}
            >
              <svg
                aria-label="warning"
                className="c3"
                color="#ffd960"
                height={24}
                role="img"
                viewBox="0 0 24 24"
                width={24}
              >
                <title>
                  warning
                </title>
                <desc>
                  triangle with exclamation mark in center
                </desc>
                <path
                  d="M0 0h24v24H0z"
                  fill="none"
                />
                <path
                  d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
                />
              </svg>
            </icon_wrapper__Icon>
          </div>
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;

exports[`Single Line List Item sets a border when bottomBorder prop = true 1`] = `
.c0 {
  padding: 0;
  margin: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  width: 100%;
  border-bottom: solid 1px #e8e5e2;
}

.c1:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      bottomBorder={true}
      onKeyUp={[Function]}
      tabIndex={null}
    >
      <li
        className="c1"
        onKeyUp={[Function]}
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c2"
          />
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          />
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;

exports[`Single Line List Item sets a click handler on the left icon via onLeftIconClick prop 1`] = `
.c5 {
  fill: #ffd960;
  vertical-align: top;
}

.c0 {
  padding: 0;
  margin: 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  width: 100%;
}

.c2:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c4 {
  padding: 0 16px 0 8px;
}

.c6 {
  padding: 8px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c1:hover .c7 {
  color: #53a4dc;
}

.c1:focus .c7 {
  color: #53a4dc;
}

.c1:hover .c8 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:focus .c8 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      onKeyUp={[Function]}
      tabIndex={null}
    >
      <li
        className="c1 c2"
        onKeyUp={[Function]}
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c3"
          >
            <single_line__LeftItemWrap
              onClick={[Function]}
              onKeyUp={[Function]}
              tabIndex="0"
            >
              <div
                className="c4"
                onClick={[Function]}
                onKeyUp={[Function]}
                tabIndex="0"
              >
                <icon_wrapper__Icon
                  aria-label="warning"
                  color="#ffd960"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <svg
                    aria-label="warning"
                    className="c5"
                    color="#ffd960"
                    height={24}
                    role="img"
                    viewBox="0 0 24 24"
                    width={24}
                  >
                    <title>
                      warning
                    </title>
                    <desc>
                      triangle with exclamation mark in center
                    </desc>
                    <path
                      d="M0 0h24v24H0z"
                      fill="none"
                    />
                    <path
                      d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
                    />
                  </svg>
                </icon_wrapper__Icon>
              </div>
            </single_line__LeftItemWrap>
            <single_line__TitleWrap>
              <div
                className="c6"
              >
                test title
              </div>
            </single_line__TitleWrap>
          </div>
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          />
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;

exports[`Single Line List Item sets a left icon in the proper dom node when passed as leftIcon prop 1`] = `
.c5 {
  fill: #ffd960;
  vertical-align: top;
}

.c0 {
  padding: 0;
  margin: 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  width: 100%;
}

.c2:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c4 {
  padding: 0 16px 0 8px;
}

.c6 {
  padding: 8px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c1:hover .c7 {
  color: #53a4dc;
}

.c1:focus .c7 {
  color: #53a4dc;
}

.c1:hover .c8 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:focus .c8 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      onKeyUp={[Function]}
      tabIndex={null}
    >
      <li
        className="c1 c2"
        onKeyUp={[Function]}
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c3"
          >
            <single_line__LeftItemWrap
              onKeyUp={[Function]}
              tabIndex={null}
            >
              <div
                className="c4"
                onKeyUp={[Function]}
                tabIndex={null}
              >
                <icon_wrapper__Icon
                  aria-label="warning"
                  color="#ffd960"
                  height={24}
                  role="img"
                  viewBox="0 0 24 24"
                  width={24}
                >
                  <svg
                    aria-label="warning"
                    className="c5"
                    color="#ffd960"
                    height={24}
                    role="img"
                    viewBox="0 0 24 24"
                    width={24}
                  >
                    <title>
                      warning
                    </title>
                    <desc>
                      triangle with exclamation mark in center
                    </desc>
                    <path
                      d="M0 0h24v24H0z"
                      fill="none"
                    />
                    <path
                      d="M1 21h22L12 2 1 21zm12-3h-2v-2h2v2zm0-4h-2v-4h2v4z"
                    />
                  </svg>
                </icon_wrapper__Icon>
              </div>
            </single_line__LeftItemWrap>
            <single_line__TitleWrap>
              <div
                className="c6"
              >
                test title
              </div>
            </single_line__TitleWrap>
          </div>
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          />
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;

exports[`Single Line List Item sets style on the proper dom node when style obj passed via wrapperStyle prop 1`] = `
.c0 {
  padding: 0;
  margin: 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  width: 100%;
}

.c2:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c1:hover .c4 {
  color: #53a4dc;
}

.c1:focus .c4 {
  color: #53a4dc;
}

.c1:hover .c5 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:focus .c5 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      onKeyUp={[Function]}
      style={
        Object {
          "margin": "8px",
        }
      }
      tabIndex={null}
    >
      <li
        className="c1 c2"
        onKeyUp={[Function]}
        style={
          Object {
            "margin": "8px",
          }
        }
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c3"
          />
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          />
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;

exports[`Single Line List Item sets the proper styles when clickable prop = true 1`] = `
.c0 {
  padding: 0;
  margin: 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  cursor: pointer;
  width: 100%;
}

.c2:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c4 {
  color: #0680cd;
  padding: 8px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c1:hover .c4 {
  color: #53a4dc;
}

.c1:focus .c4 {
  color: #53a4dc;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      clickable={true}
      onKeyUp={[Function]}
      tabIndex={null}
    >
      <li
        className="c1 c2"
        onKeyUp={[Function]}
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c3"
          >
            <single_line__TitleWrap
              clickable={true}
            >
              <div
                className="c4"
              >
                test title
              </div>
            </single_line__TitleWrap>
          </div>
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          />
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;

exports[`Single Line List Item sets the proper styles when underlineTitleOnHover = true 1`] = `
.c0 {
  padding: 0;
  margin: 0;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  width: 100%;
}

.c2:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c1:hover .c5 {
  color: #53a4dc;
}

.c1:focus .c5 {
  color: #53a4dc;
}

.c4 {
  padding: 8px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c1:hover .c4 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

.c1:focus .c4 {
  -webkit-text-decoration: underline;
  text-decoration: underline;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      onKeyUp={[Function]}
      tabIndex={null}
    >
      <li
        className="c1 c2"
        onKeyUp={[Function]}
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c3"
          >
            <single_line__TitleWrap
              underlineTitleOnHover={true}
            >
              <div
                className="c4"
              >
                test title
              </div>
            </single_line__TitleWrap>
          </div>
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          />
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;

exports[`Single Line List Item sets the title on the correct dom node via the title prop 1`] = `
.c0 {
  padding: 0;
  margin: 0;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  padding: 4px 0;
  list-style-type: none;
  width: 100%;
}

.c1:focus {
  outline: dotted 1px rgb(59,153,252);
  outline-offset: -1px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: start;
  -webkit-justify-content: flex-start;
  -ms-flex-pack: start;
  justify-content: flex-start;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

.c3 {
  padding: 8px;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

<list__ListWrap>
  <ul
    className="c0"
  >
    <single_line__ItemWrap
      onKeyUp={[Function]}
      tabIndex={null}
    >
      <li
        className="c1"
        onKeyUp={[Function]}
        tabIndex={null}
      >
        <single_line__ItemLeftContainer>
          <div
            className="c2"
          >
            <single_line__TitleWrap>
              <div
                className="c3"
              >
                test title
              </div>
            </single_line__TitleWrap>
          </div>
        </single_line__ItemLeftContainer>
        <single_line__ItemRightContainer>
          <div
            className=""
          />
        </single_line__ItemRightContainer>
      </li>
    </single_line__ItemWrap>
  </ul>
</list__ListWrap>
`;
